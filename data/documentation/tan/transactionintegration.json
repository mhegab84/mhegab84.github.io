{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"a rule of thumb for now that all processes that happen on mobile devices except for add new device , doesn’t need another device approval.  but as this rule might change we should enlist here all methodolgoies."}]},{"anchor":"Sign-From-Same-Device","level":2,"type":"heading","text":"Sign From Same Device."},{"type":"paragraph","inlineContent":[{"type":"text","text":"Signing from same device is the term we going to use for the usual mobile processes that need TAN. because in the background the transaction send a string that need to be signed with the device private RSA key."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s few steps to make transaction integration in your feature"}]},{"anchor":"Back-End","level":3,"type":"heading","text":"Back End."},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure that the service you want to integrate with already integrated with transaction service (tx-service)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure that you can send "},{"type":"strong","inlineContent":[{"type":"text","text":"X-DEVICE-ID"}]},{"type":"text","text":" to this service. this ID ensures that this operation will not trigger push notification service and that you can do the process in the device without waiting for approval from another device."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure that the service gives you back a transaction ID."}]}]}]},{"anchor":"Sign-The-transaction","level":3,"type":"heading","text":"Sign The transaction."},{"type":"paragraph","inlineContent":[{"type":"text","text":"from Mobile side you need to call two services in the TAN package’s TransactionService."}]},{"type":"codeListing","syntax":"swift","code":["func getTransaction(transactionID: String) async throws -> TransactionModel"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"which you send the Transaction ID you just got from the service you want to process."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"then you just need to call after directly"}]},{"type":"codeListing","syntax":"swift","code":["func confirmTransaction(transactionID: String,","transactionMode: TransactionMode,","needAuthentication: Bool) async throws -> TransactionPostModel?"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"needAuthentication"},{"type":"text","text":" parameters is needed to be true if you want this process to trigger Biometrics\/Pin Code, other wise it won’t be secure enough."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"transactionMode"},{"type":"text","text":", usually in the case of background signing just need to be “.approved”"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/tan\/transactionintegration"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TAN\/documentation\/TAN\/TransactionIntegration","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Before you start integrating , you need to figure out if the proccess you want to have a TAN process on  is a process you want the user to wait for approval from another device or it will happen seemlessly on the same device."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Transaction Integration","role":"article","modules":[{"name":"TAN"}]},"hierarchy":{"paths":[["doc:\/\/TAN\/documentation\/TAN"]]},"references":{"smartbroker.png":{"alt":"","type":"image","identifier":"smartbroker.png","variants":[{"url":"\/images\/smartbroker.png","traits":["1x","light"]}]},"doc://TAN/documentation/TAN":{"images":[{"type":"icon","identifier":"smartbroker.png"}],"role":"collection","title":"TAN","abstract":[{"type":"text","text":"TAN is a package that includes Device binding mechanisms and Reacting to Transactions"}],"identifier":"doc:\/\/TAN\/documentation\/TAN","kind":"symbol","type":"topic","url":"\/documentation\/tan"}}}